{"version":3,"sources":["Components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goodsArray","className","map","good","goodsFromServer","App","useState","sortBy","setSortBy","isReversed","setIsReversed","isStarted","setIsStarted","goods","sort","a","b","localeCompare","length","reverse","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"kNAMaA,EAA6B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC3C,OACE,oBAAIC,UAAU,YAAd,SACGD,EAAWE,KAAI,SAAAC,GAAI,OAClB,oBAAIF,UAAU,YAAd,SACGE,GAD4BA,SCNjCC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAiGaC,EA9FO,WAEpB,MAA4BC,mBAAS,WAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEIC,EAAK,UAAOT,GAyChB,OAjBAS,EAAMC,MAAK,SAACC,EAAGC,GACb,OAAQT,GACN,IAAK,WACH,OAAOQ,EAAEE,cAAcD,GAEzB,IAAK,SACH,OAAOD,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAITT,GACFI,EAAMM,UAIN,qBAAKlB,UAAU,MAAf,SACIU,EAWE,qCACE,sBAAKV,UAAU,eAAf,UACE,wBACEmB,KAAK,SACLC,QApDE,WACdX,GAAeD,IAiDL,qBAMA,wBACEW,KAAK,SACLC,QAtDO,WACnBb,EAAU,aAmDA,iCAMA,wBACEY,KAAK,SACLC,QAxDK,WACjBb,EAAU,WAqDA,4BAMA,wBACEY,KAAK,SACLC,QA1DI,WAChBR,EAAK,UAAOT,GACZI,EAAU,WACVE,GAAc,IAqDJ,sBAOF,cAAC,EAAD,CAAWV,WAAYa,OApCzB,wBACEO,KAAK,SACLnB,UAAU,aACVoB,QA9CI,WACZT,GAAa,IA0CP,sBCjEVU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.47f235fa.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goodsArray: string[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goodsArray }) => {\n  return (\n    <ul className=\"app__list\">\n      {goodsArray.map(good => (\n        <li className=\"app__item\" key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport { GoodsList } from './Components/GoodsList/GoodsList';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  // const [goods, setGoods] = useState([...goodsFromServer]);\n  const [sortBy, setSortBy] = useState('default');\n  const [isReversed, setIsReversed] = useState(false);\n  const [isStarted, setIsStarted] = useState(false);\n\n  let goods = [...goodsFromServer];\n\n  const start = () => {\n    setIsStarted(true);\n  };\n\n  const reverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const sortAlphabet = () => {\n    setSortBy('alphabet');\n  };\n\n  const sortLength = () => {\n    setSortBy('length');\n  };\n\n  const resetSort = () => {\n    goods = [...goodsFromServer];\n    setSortBy('default');\n    setIsReversed(false);\n  };\n\n  goods.sort((a, b) => {\n    switch (sortBy) {\n      case 'alphabet':\n        return a.localeCompare(b);\n\n      case 'length':\n        return a.length - b.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    goods.reverse();\n  }\n\n  return (\n    <div className=\"app\">\n      {!isStarted\n        ? (\n          <button\n            type=\"button\"\n            className=\"app__start\"\n            onClick={start}\n          >\n            Start\n          </button>\n        )\n        : (\n          <>\n            <div className=\"app__buttons\">\n              <button\n                type=\"button\"\n                onClick={reverse}\n              >\n                Reverse\n              </button>\n              <button\n                type=\"button\"\n                onClick={sortAlphabet}\n              >\n                Sort alphabetically\n              </button>\n              <button\n                type=\"button\"\n                onClick={sortLength}\n              >\n                Sort by length\n              </button>\n              <button\n                type=\"button\"\n                onClick={resetSort}\n              >\n                Reset\n              </button>\n            </div>\n            <GoodsList goodsArray={goods} />\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}